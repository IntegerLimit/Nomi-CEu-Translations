name: main
on: push

permissions:
  actions: write

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout to repository
       uses: actions/checkout@v3
     - name: Set matrix data
       id: set-matrix
       run: echo "matrix=$(jq -c . < ./modules.json)" >> $GITHUB_OUTPUT
     
  makeNames:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: 
        modules: 
          - ${{ fromJson(needs.configure.outputs.matrix).modules }}
          - "combined"
    steps:
      - name: Checkout Ref
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          #ref: ${{ inputs.tag }}

      - name: Restore Cached Files
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            ~/.npm
            ./.cache
            ./tools/node_modules
          key: ${{ runner.os }}-bunny-${{ hashFiles('**/.cache', '**/package-lock.json', '**/manifest.json') }}
          restore-keys: ${{ runner.os }}-bunny-

      - name: Setup NodeJS v16
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          check-latest: true

      - name: Setup NPM Packages
        working-directory: ./tools
        run: npm ci
        
      - working-directory: ./tools
        run: npx gulp makeGHAName
        id: name
        env:
          MODULE: ${{ matrix.modules }}
          
      - uses: cloudposse/github-action-matrix-outputs-write@0.4.2
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.modules }}
          outputs: |
            - FILENAME: ${{ steps.name.outputs.file }}
            - MODULE: ${{ matrix.modules }}
          
  read:
      runs-on: ubuntu-latest
      needs: [makeNames]
      steps:
        - uses: cloudposse/github-action-matrix-outputs-read@0.1.1
          id: read
          with:
            matrix-step-name: makeNames

      outputs:
        result: "${{ steps.read.outputs.result }}"
          
  printNames:
    runs-on: ubuntu-latest
    needs: [configure, read]
    strategy:
      matrix: 
        include:
          ${{ fromJson(needs.read.outputs.result).* }}
    steps:
      - run: |
          echo ${{ matrix.FILENAME }}
          echo ${{ matrix.MODULE }}
          
  deleteArtifacts:
    needs: printNames
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create test file
        run: echo hello > test.txt

      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: test.txt

      - uses: geekyeggo/delete-artifact@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "[A-Za-z0-9 ]*"
          
      #- uses: geekyeggo/delete-artifact@v4
       # with:
         # token: ${{ secrets.GITHUB_TOKEN }}
        #  name: "*c*"
          #failOnError: false

    